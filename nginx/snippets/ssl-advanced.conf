# Advanced SSL Configuration
# Configuration Engineer: Hive Mind Swarm
# Modern SSL/TLS configuration with security best practices

# SSL Protocols - Only modern and secure protocols
ssl_protocols TLSv1.2 TLSv1.3;

# Modern cipher suite for TLS 1.2 and 1.3
# Prioritizes AEAD ciphers and forward secrecy
ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

# Let client choose cipher (modern approach)
ssl_prefer_server_ciphers off;

# TLS 1.3 specific configuration
ssl_conf_command Ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256;
ssl_conf_command Options PrioritizeChaCha;

# Session Cache - Shared across workers
ssl_session_cache shared:SSL:50m;
ssl_session_timeout 1d;

# Disable session tickets for better security
ssl_session_tickets off;

# OCSP Stapling for certificate validation
ssl_stapling on;
ssl_stapling_verify on;

# OCSP Response caching
ssl_stapling_file /var/cache/nginx/ocsp.der;

# Buffer optimization for performance
ssl_buffer_size 4k;

# Early data for TLS 1.3 (0-RTT)
ssl_early_data on;

# DH Parameters for DHE ciphers (generate with: openssl dhparam -out dhparam.pem 2048)
ssl_dhparam /etc/nginx/ssl/dhparam.pem;

# Certificate chain optimization
ssl_certificate_by_lua_block {
    -- Lua block for dynamic certificate selection (if using OpenResty)
    -- This can be used for SNI-based certificate selection
}

# HPKP (HTTP Public Key Pinning) - Use with caution
# add_header Public-Key-Pins 'pin-sha256="primary-key-hash"; pin-sha256="backup-key-hash"; max-age=5184000; includeSubDomains' always;

# Certificate Transparency
# add_header Expect-CT 'max-age=86400, enforce, report-uri="https://station2290.ru/ct-report"' always;

# DNS resolvers for OCSP
resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;

# SSL error handling
error_page 495 496 497 /ssl_error.html;

# Location for SSL error page
location = /ssl_error.html {
    root /var/www/error_pages;
    internal;
    add_header Content-Type text/html;
}

# Security headers specific to HTTPS
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

# TLS version information for debugging (remove in production)
add_header X-TLS-Version $ssl_protocol always;
add_header X-TLS-Cipher $ssl_cipher always;

# Perfect Forward Secrecy validation
if ($ssl_cipher !~* ECDHE) {
    return 426 "Upgrade Required: Perfect Forward Secrecy required";
}

# SSL client certificate validation (if needed)
# ssl_client_certificate /etc/nginx/ssl/ca.crt;
# ssl_verify_client optional;
# ssl_verify_depth 2;

# Rate limiting for SSL handshakes
limit_req_zone $ssl_preread_server_name zone:ssl_handshake:10m rate=5r/s;

# Log SSL information
log_format ssl_log '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   'ssl_protocol="$ssl_protocol" '
                   'ssl_cipher="$ssl_cipher" '
                   'ssl_session_id="$ssl_session_id" '
                   'ssl_session_reused="$ssl_session_reused"';

# SSL performance monitoring
access_log /var/log/nginx/ssl_access.log ssl_log;

# SSL certificate validation
ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

# OCSP response validation
ssl_stapling_responder http://ocsp.station2290.ru/;

# Security: Disable weak SSL features
ssl_conf_command Options -SessionTicket;
ssl_conf_command Options -Compression;