# Station 2290 Enhanced Site Configuration
# Configuration Engineer: Hive Mind Swarm
# Production-ready configuration with advanced optimizations

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name station2290.ru www.station2290.ru;
    
    # Security headers even for redirects
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        try_files $uri =404;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name station2290.ru www.station2290.ru;
    
    # Root directory (for static files if needed)
    root /var/www/station2290;
    index index.html index.htm;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/station2290.crt;
    ssl_certificate_key /etc/nginx/ssl/station2290.key;
    
    # Include advanced SSL settings
    include /etc/nginx/snippets/ssl-advanced.conf;
    
    # Include enhanced security headers
    include /etc/nginx/snippets/security-headers-enhanced.conf;
    
    # Include performance monitoring
    include /etc/nginx/snippets/performance-monitoring.conf;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=main:20m rate=10r/s;
    limit_req zone=main burst=20 nodelay;
    limit_conn perip 10;
    
    # Custom error pages
    error_page 400 404 /error/404.html;
    error_page 500 502 503 504 /error/5xx.html;
    error_page 429 /error/429.html;
    
    location = /error/404.html {
        root /var/www/error_pages;
        internal;
    }
    
    location = /error/5xx.html {
        root /var/www/error_pages;
        internal;
    }
    
    location = /error/429.html {
        root /var/www/error_pages;
        internal;
        add_header Retry-After 60 always;
    }
    
    # Favicon and robots.txt
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    location = /robots.txt {
        log_not_found off;
        access_log off;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Security.txt
    location = /.well-known/security.txt {
        default_type text/plain;
        return 200 "Contact: security@station2290.ru
Expires: $(date -u -d '+1 year' '+%Y-%m-%dT%H:%M:%S.000Z')
Preferred-Languages: ru, en
";
    }
    
    # API endpoints with advanced caching and security
    location /api/ {
        # Enhanced rate limiting for API
        limit_req zone=api burst=30 nodelay;
        limit_conn perip 5;
        
        # API-specific security headers
        add_header X-API-Version "v1" always;
        add_header X-RateLimit-Limit "30" always;
        add_header X-RateLimit-Remaining "$limit_req_status" always;
        
        # CORS handling
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "https://station2290.ru" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age "3600" always;
            add_header Content-Length 0;
            return 204;
        }
        
        # Proxy to API backend
        proxy_pass http://api_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 16k;
        proxy_buffers 32 16k;
        
        # Conditional caching for GET requests
        set $no_cache 1;
        if ($request_method = GET) {
            set $no_cache 0;
        }
        if ($uri ~* "/api/(auth|logout|sensitive)") {
            set $no_cache 1;
        }
        
        proxy_cache api_cache;
        proxy_cache_bypass $no_cache;
        proxy_no_cache $no_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        add_header X-Cache-Status $upstream_cache_status always;
        
        # Security
        proxy_hide_header X-Powered-By;
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # WebSocket support
    location /ws/ {
        proxy_pass http://websocket_backend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # Disable buffering for WebSocket
        proxy_buffering off;
        
        # Security
        limit_req zone=general burst=10 nodelay;
        limit_conn perip 3;
    }
    
    # Bot webhook endpoints
    location /bot/ {
        # Strict rate limiting for webhooks
        limit_req zone=bot burst=5 nodelay;
        limit_conn perip 2;
        
        # Bot-specific security
        add_header X-Bot-Handler "station2290" always;
        
        # IP whitelist for webhook sources (adjust as needed)
        # allow 149.154.160.0/20;  # Telegram
        # allow 91.108.4.0/22;     # Telegram
        # deny all;
        
        proxy_pass http://bot_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # No caching for webhooks
        proxy_cache off;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        
        # Webhook timeout settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Admin panel with additional security
    location /admin/ {
        # Strict rate limiting
        limit_req zone=strict burst=5 nodelay;
        limit_conn perip 2;
        
        # IP whitelist (uncomment and configure)
        # allow 192.168.1.0/24;
        # allow 10.0.0.0/8;
        # deny all;
        
        # Basic auth (configure .htpasswd file)
        # auth_basic "Admin Area";
        # auth_basic_user_file /etc/nginx/.htpasswd;
        
        # Additional security headers for admin
        add_header X-Frame-Options "DENY" always;
        add_header X-Admin-Access "restricted" always;
        
        proxy_pass http://adminka_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # Admin-specific timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # No caching for admin pages
        proxy_cache off;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }
    
    # Order panel
    location /orders/ {
        limit_req zone=general burst=15 nodelay;
        limit_conn perip 5;
        
        # Order-specific headers
        add_header X-Order-System "station2290" always;
        
        proxy_pass http://order_panel_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # Caching for order assets
        proxy_cache app_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        add_header X-Cache-Status $upstream_cache_status always;
    }
    
    # Static assets with aggressive caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|eot|svg|webp|avif)$ {
        # Cache static assets aggressively
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        add_header Vary "Accept-Encoding" always;
        
        # Security for static files
        add_header X-Content-Type-Options "nosniff" always;
        
        # Gzip for text-based assets
        location ~* \.(css|js|svg)$ {
            gzip_static on;
            brotli_static on;
        }
        
        # Try to serve from local filesystem first
        try_files $uri @fallback_static;
        
        # Disable access logs for static assets
        access_log off;
    }
    
    location @fallback_static {
        proxy_pass http://web_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static fallbacks
        proxy_cache static_cache;
        proxy_cache_valid 200 1d;
        proxy_cache_valid 404 10m;
        add_header X-Cache-Status $upstream_cache_status always;
    }
    
    # Main web application (root)
    location / {
        limit_req zone=general burst=50 nodelay;
        limit_conn perip 10;
        
        # Web app headers
        add_header X-Web-App "station2290" always;
        
        proxy_pass http://web_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # Intelligent caching
        set $no_cache 0;
        if ($cookie_session ~* "authenticated") {
            set $no_cache 1;
        }
        if ($uri ~* "/(login|logout|profile|dashboard)") {
            set $no_cache 1;
        }
        
        proxy_cache app_cache;
        proxy_cache_bypass $no_cache;
        proxy_no_cache $no_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        add_header X-Cache-Status $upstream_cache_status always;
        
        # Hide backend information
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }
    
    # Health check endpoint (public)
    location = /health {
        access_log off;
        add_header Content-Type text/plain always;
        add_header X-Health-Check "station2290" always;
        return 200 "healthy\n";
    }
    
    # Nginx status (restricted)
    location = /nginx-status {
        stub_status on;
        access_log off;
        
        # Restrict to monitoring systems
        allow 127.0.0.1;
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        deny all;
        
        add_header Content-Type text/plain always;
    }
    
    # Security: Block access to sensitive files
    location ~* \.(htaccess|htpasswd|ini|phps|fla|psd|log|sh)$ {
        deny all;
        return 404;
    }
    
    # Security: Block access to hidden files
    location ~ /\. {
        deny all;
        return 404;
    }
    
    # Security: Block access to backup files
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
        return 404;
    }
    
    # Sitemap and SEO files
    location = /sitemap.xml {
        proxy_pass http://web_backend;
        proxy_cache static_cache;
        proxy_cache_valid 200 1d;
        expires 1d;
        add_header Cache-Control "public" always;
    }
    
    # Handle favicon requests efficiently
    location ~* /favicon\.ico$ {
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        log_not_found off;
        access_log off;
        try_files $uri =204;
    }
}