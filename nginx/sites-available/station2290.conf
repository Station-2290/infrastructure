# Station2290 Production Configuration
# Reverse proxy for all applications (deployed separately)

# Upstream definitions for all services
upstream api_backend {
    server localhost:3000;
    keepalive 32;
}

upstream web_backend {
    server localhost:3001;
    keepalive 32;
}

upstream bot_backend {
    server localhost:3002;
    keepalive 32;
}

upstream adminka_backend {
    server localhost:8080;
    keepalive 32;
}

upstream orders_backend {
    server localhost:8081;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=admin:10m rate=5r/s;

# HTTP Server (redirects to HTTPS)
server {
    listen 80;
    listen [::]:80;
    
    server_name station2290.ru www.station2290.ru api.station2290.ru adminka.station2290.ru orders.station2290.ru bot.station2290.ru;
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # Health check (before redirect)
    location /health {
        return 200 'Infrastructure OK';
        add_header Content-Type text/plain;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS Server - Main Website
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name station2290.ru www.station2290.ru;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/station2290.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/station2290.ru/privkey.pem;
    include /etc/nginx/snippets/ssl-params.conf;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    
    # Proxy to Web Application (Next.js)
    location / {
        proxy_pass http://web_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # Health check
    location /health {
        return 200 'Web OK';
        add_header Content-Type text/plain;
    }
}

# HTTPS Server - API
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name api.station2290.ru;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/station2290.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/station2290.ru/privkey.pem;
    include /etc/nginx/snippets/ssl-params.conf;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CORS Headers for API
    add_header Access-Control-Allow-Origin "https://station2290.ru" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    
    # Rate limiting for API
    limit_req zone=api burst=50 nodelay;
    
    # Proxy to API Service (NestJS)
    location / {
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # OPTIONS for CORS preflight
    location ~* \.(OPTIONS)$ {
        add_header Access-Control-Allow-Origin "https://station2290.ru";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 200;
    }
}

# HTTPS Server - Admin Panel
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name adminka.station2290.ru;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/station2290.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/station2290.ru/privkey.pem;
    include /etc/nginx/snippets/ssl-params.conf;
    
    # Security Headers (stricter for admin)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;
    
    # Rate limiting for admin (stricter)
    limit_req zone=admin burst=10 nodelay;
    
    # Basic auth for admin panel
    # auth_basic "Admin Access";
    # auth_basic_user_file /etc/nginx/.htpasswd;
    
    # Proxy to Admin Panel (React)
    location / {
        proxy_pass http://adminka_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
}

# HTTPS Server - Order Panel
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name orders.station2290.ru;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/station2290.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/station2290.ru/privkey.pem;
    include /etc/nginx/snippets/ssl-params.conf;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    
    # Proxy to Order Panel (React)
    location / {
        proxy_pass http://orders_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
}

# HTTPS Server - Bot Webhooks
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name bot.station2290.ru;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/station2290.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/station2290.ru/privkey.pem;
    include /etc/nginx/snippets/ssl-params.conf;
    
    # Security Headers
    add_header Strict-Transform-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer" always;
    
    # Rate limiting for webhooks
    limit_req zone=api burst=100 nodelay;
    
    # IP filtering for webhooks (uncomment and add WhatsApp IPs)
    # allow 157.240.0.0/16;  # WhatsApp IP range
    # allow 31.13.24.0/21;   # Facebook IP range
    # deny all;
    
    # Proxy to Bot Service (Node.js)
    location / {
        proxy_pass http://bot_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # Health check
    location /health {
        proxy_pass http://bot_backend/health;
        proxy_set_header Host $host;
    }
}

# Nginx status for monitoring
server {
    listen 8080;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.20.0.0/16;  # Docker network
        deny all;
    }
    
    location /health {
        return 200 'Nginx OK';
        add_header Content-Type text/plain;
    }
}