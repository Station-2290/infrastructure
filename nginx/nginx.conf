# Station2290 Main Nginx Configuration
# High-performance configuration with security and monitoring

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Charset
    charset utf-8;
    
    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time $pipe';

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       '$request_time $upstream_response_time $pipe '
                       '"$upstream_addr" "$upstream_status" "$upstream_cache_status"';
    
    # Access Logs
    access_log /var/log/nginx/access.log main buffer=32k flush=5s;
    
    # Basic Settings
    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75s;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    server_names_hash_bucket_size 128;
    server_tokens off;
    
    # Client Settings
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rdf+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        application/font-woff
        application/font-woff2;
    
    # Brotli Compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Rate Limiting Zones
    limit_req_zone $binary_remote_addr zone=api:20m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:20m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=bot:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/m;
    
    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # Map for real IP detection
    map $http_x_forwarded_for $real_ip {
        ~^(\d+\.\d+\.\d+\.\d+) $1;
        default $remote_addr;
    }
    
    # Security Headers (Global)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Robots-Tag "noindex, nofollow" always;
    
    # Hide Nginx version
    server_tokens off;
    more_clear_headers Server;
    more_set_headers "Server: Station2290";
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_buffer_size 8k;
    
    # OCSP Settings
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Proxy Settings
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=app_cache:100m max_size=1g 
                     inactive=60m use_temp_path=off;
    proxy_temp_path /tmp/nginx_proxy;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffer_size 8k;
    proxy_buffers 8 8k;
    proxy_busy_buffers_size 16k;
    proxy_max_temp_file_size 1024m;
    proxy_temp_file_write_size 8k;
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
    proxy_next_upstream_tries 3;
    proxy_next_upstream_timeout 10s;
    
    # Upstream Health Checks
    upstream api_backend {
        least_conn;
        server api:3000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    upstream web_backend {
        least_conn;
        server web:3000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    upstream bot_backend {
        least_conn;
        server bot:3001 max_fails=3 fail_timeout=30s weight=1;
        keepalive 16;
        keepalive_requests 500;
        keepalive_timeout 60s;
    }
    
    upstream adminka_backend {
        least_conn;
        server adminka:80 max_fails=3 fail_timeout=30s weight=1;
        keepalive 16;
        keepalive_requests 500;
        keepalive_timeout 60s;
    }
    
    upstream order_panel_backend {
        least_conn;
        server order-panel:80 max_fails=3 fail_timeout=30s weight=1;
        keepalive 16;
        keepalive_requests 500;
        keepalive_timeout 60s;
    }
    
    upstream prisma_studio_backend {
        server api:5555 max_fails=3 fail_timeout=30s weight=1;
        keepalive 8;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # Default server block (catch-all)
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Security
        location / {
            return 444;
        }
        
        # Allow health checks
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
    # Default HTTPS server block
    server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        server_name _;
        
        # Dummy SSL certificate (replace with real one)
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        
        location / {
            return 444;
        }
    }
    
    # Include site configurations
    include /etc/nginx/sites-enabled/*.conf;
    
    # Monitoring endpoint
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            deny all;
        }
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}